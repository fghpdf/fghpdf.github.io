<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>一次跨国诈骗</title>
    <link href="/2021/01/23/%E4%B8%80%E6%AC%A1%E8%B7%A8%E5%9B%BD%E8%AF%88%E9%AA%97/"/>
    <url>/2021/01/23/%E4%B8%80%E6%AC%A1%E8%B7%A8%E5%9B%BD%E8%AF%88%E9%AA%97/</url>
    
    <content type="html"><![CDATA[<h2 id="2021-01-21-12-07-AM"><a href="#2021-01-21-12-07-AM" class="headerlink" title="2021-01-21 12:07 AM"></a>2021-01-21 12:07 AM</h2><p>+65 64828870 告诉我 DBS 有文件通知，英文和中文宣读一遍，并转接了人工客服。客服告诉我系统故障，一会儿回我电话。我当时正在买饭，并未多想，直接答应。</p><h2 id="2021-01-21-3-20-PM"><a href="#2021-01-21-3-20-PM" class="headerlink" title="2021-01-21 3:20 PM"></a>2021-01-21 3:20 PM</h2><p>+65 6219 8147 告诉我，我于 2020-09-25 在 DBS 北京分行通过网上方式申请了一张银行卡，并于 2020-10-03 在北京东城区万达广场购买了黄金项链。价值 19500 人民币，折合新币 3900 元。由于逾期两个月，DBS 将对我申请<strong>强制扣款</strong>。</p><p>十分慌张的我立马表示这不可能，我 DBS 才办的，然后职员提供了<em>信用卡号</em>，<em>申请时的手机号</em>，并准确说出了我<em>新加坡手机号</em>以及<em>新加坡签证号</em>。银行职员表示这可能是信息泄漏，但是需要北京公安出示证明。我表示人在新加坡，不知道怎么联系北京公安。银行职员表示他们可以帮忙联系，但是需要我自己报案，我表示可以。</p><p>电话转接成功，值班民警态度很好，口音不像北京人，但是我比较急，猜想可能是涉外民警，没有细想。和民警沟通完，他说这是信息泄露，但是现需要我确认他的身份，他让我在网上搜索北京市公安局，页面最底下有个电话，他会用这个电话打过来，并让我核实身份。一会儿这个电话确实打过来之后，核实完身份，就开始下一步。</p><p><img src="https://i.loli.net/2021/01/23/kPhcqNSMje5KouA.jpg" alt="WeChat Image_20210123110940.jpg"></p><p>民警表示这个电话是报案电话（现在看是技术支持电话！而且来电显示可以伪装），所以需要切换到 IM 工具，并表示微信有信息泄露风险，所以使用 WhatsAPP，接下来「北京市公安局」加我好友，同意，进行下一步。</p><p><img src="https://i.loli.net/2021/01/23/nYIMpbDq7UPsJj4.jpg" alt="WeChat Image_20210123110949.jpg"></p><p>警察通过 WhatsAPP 跟我说他叫陈X乐，并且说出了我的身份证号，让我确认。我确认之后，警官问我能不能来北京录口供，我当然表示不可能，他表示很为难，但是没有关系，可以通过 WhatsApp 视频方式录口供，要求是不能有闲杂人等出现在视频里。我就找了会议室录口供。<strong>期间他露了一次脸，身上穿着警服，有号码。</strong>我将银行的信息复述了一遍，警官表示明白了，并且问了我家庭情况，但此时我并未明确告知我父亲的工作以及我的老家。警官询问完之后，问我有没有日常生活中在提交的材料上写「仅用作 XX 用途，他用无效」，我表示没有，他教育了一番，并发给我一个新闻视频，让我看完（回想起来简直就是在嘲讽我），在此期间，他说暂停了录音并向同仁（他一直这么说）开具证明。看完之后，我发了消息，他就继续，他告诉我证明已经开好，并要了我在新加坡的地址，但是我告诉的公司的，不是住所的。他将证明发给我，并告诉我结案之后，将通过国际刑警将文件发送到我的住所。</p><p><img src="https://i.loli.net/2021/01/23/8e1I5HUdbE6FAhT.jpg" alt="WeChat Image_20210123111632.jpg"></p><p>这个事件随着警官强调北京警方会帮忙处理此事，并为群众利益优先而告一段落。</p><p>但是我心里有点奇怪，警官虽然反复强调不可外泄，但是我还是将一点信息说了出去，毕竟盗刷有什么大不了的。这个时候我觉得有点奇怪，警官怎么确认不是我申请卡盗刷的？</p><p>但是我还是更担心我的钱，我卡里的钱都不够扣的，我没刷就刷刷 DBS APP 看看钱在不在，所幸一直都在。警官晚上发消息告诉我，他们已经前往万达，找店铺调取录像。</p><h2 id="2021-01-22-7-43-AM"><a href="#2021-01-22-7-43-AM" class="headerlink" title="2021-01-22 7:43 AM"></a>2021-01-22 7:43 AM</h2><p>警官通知我有事情要说，但是我当时应该正在洗漱，并没有看到，到了公司才看到有对话，在 9:23 赶紧联系警官。<br>警官告诉我成功找到了嫌疑人，并拍了照，问我认不认识。我表示不认识，警官表示没问题，他会做进一步调查。</p><p> <img src="https://i.loli.net/2021/01/23/SDwaZIdpUv8CsRq.jpg" alt="WeChat Image_20210123110958.jpg"></p><p>这里我觉得 DBS 服务很不到位，作为「亚洲最安全银行」，审核不严不说，怎么这个事连个回执都没有，然后我打了 DBS 客服电话，DBS 客服电话也是要按一堆键，第一次还没接通，第二次才接通。</p><p>但是银行告诉我从没给我打电话，并告诉我 +65 虽然是新加坡国际区号，但是在外国打来的，新加坡本地拨打电话不带国际区号，这个功能是新加坡政府防范网络诈骗专门要求电信公司做的。然后我确认了并没有盗刷的通知。此时，我已经十分疑惑，并查询了领事馆联系方式。</p><p>2021-01-22 10:38 PM<br>我向警官汇报我已经到家，警官随即打了电话。一开始就说「先生，你是不是有事瞒着我们警方」「为什么我们在杨秀珠腐败案中发现你名下的 OCBC 账户」「你的 OCBC 账户有过 32 万人民币」</p><p>但是他在这里准确说出我在国内的<em>家庭住址</em>以及<em>曾用名</em>。</p><p>到这里我更加怀疑了，但是我这里不能乱，我继续接着他的话往下说，并保证没有参与此案，他巴拉巴拉说了一大堆不是警方不相信你，需要我配合警方调查，我答应了，我还以为这波会找我要钱，但是没有。不仅如此，还给我看了杨秀珠的口供，我注意到警察的名字就是口供的记录员。</p><p>总之打了很长时间电话，末了要求我每日汇报安全情况，并不准接陌生电话。</p><p><img src="https://i.loli.net/2021/01/23/nPrGmECuNBt7i6q.jpg" alt="WeChat Image_20210123111006.jpg"></p><p>此时我断定这是骗子，我找到了之前人称「德艺双馨的人民教育家」主持人朋友，他告诉我这一切流程都是错误的，我无比信任的来电显示更是可以随意伪造。他告诉我向领事馆和新加坡警局报案，安抚我，并建议我向公司行政求助。之后我向台湾同事确认了台湾人说「曝光」是 「pu guang」，并且他也有类似遭遇。</p><p>但是这里领事馆电话并打不通，我不想现在就去警察局，所以打算先安抚骗子。但是我还打草惊蛇了，人家再也不回我了。</p><p><img src="https://i.loli.net/2021/01/23/j9cKxHObEQkPwXg.jpg" alt="WeChat Image_20210123111009.jpg"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/01/23/hello-world/"/>
    <url>/2021/01/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Context in golang</title>
    <link href="/2020/11/27/interview/golang/context/"/>
    <url>/2020/11/27/interview/golang/context/</url>
    
    <content type="html"><![CDATA[<h1 id="Context-In-Golang"><a href="#Context-In-Golang" class="headerlink" title="Context In Golang"></a>Context In Golang</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>the context in golang has some functions and types.</p><p>We can see them in <a href="https://golang.org/pkg/context/">document</a></p><p>context package functions:</p><pre><code class="hljs golang"><span class="hljs-comment">// WithCancel returns a copy of parent with a new Done channel. </span><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithCancel</span><span class="hljs-params">(parent Context)</span> <span class="hljs-params">(ctx Context, cancel CancelFunc)</span></span><span class="hljs-comment">// WithDeadline returns a copy of the parent context with </span><span class="hljs-comment">// the deadline adjusted to be no later than d.</span><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithDeadline</span><span class="hljs-params">(parent Context, d time.Time)</span> <span class="hljs-params">(Context, CancelFunc)</span></span><span class="hljs-comment">// WithTimeout returns WithDeadline(parent, time.Now().Add(timeout)).</span><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithTimeout</span><span class="hljs-params">(parent Context, timeout time.Duration)</span> <span class="hljs-params">(Context, CancelFunc)</span></span></code></pre><p>2 types:</p><pre><code class="hljs golang"><span class="hljs-keyword">type</span> CancelFunc<span class="hljs-keyword">type</span> Context    <span class="hljs-comment">// Background returns a non-nil, empty Context.</span>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">Background</span><span class="hljs-params">()</span> <span class="hljs-title">Context</span></span>    <span class="hljs-comment">// TODO returns a non-nil, empty Context.</span>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">TODO</span><span class="hljs-params">()</span> <span class="hljs-title">Context</span></span>    <span class="hljs-comment">// WithValue returns a copy of parent in which the value associated with key is val.</span>    <span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithValue</span><span class="hljs-params">(parent Context, key, val <span class="hljs-keyword">interface</span>&#123;&#125;)</span> <span class="hljs-title">Context</span></span></code></pre><p>important type – context</p><pre><code class="hljs golang"><span class="hljs-keyword">type</span> Context <span class="hljs-keyword">interface</span> &#123;Deadline() (deadline time.Time, ok <span class="hljs-keyword">bool</span>)Done() &lt;-<span class="hljs-keyword">chan</span> <span class="hljs-keyword">struct</span>&#123;&#125;Err() errorValue(key <span class="hljs-keyword">interface</span>&#123;&#125;) <span class="hljs-keyword">interface</span>&#123;&#125;&#125;</code></pre><p>So we can sure there are three roles of context:</p><ol><li>Carry deadlines</li><li>Cancellation signals</li><li>Save Request-scoped values</li></ol><h2 id="When-we-use-it"><a href="#When-we-use-it" class="headerlink" title="When we use it?"></a>When we use it?</h2><p>In the actual situation, we will meet some questions:</p><ul><li>how to cancel a goroutine</li><li>how to cancel a RPC/HTTP request</li><li>how to trace a RPC/HTTP request</li><li>…</li></ul><p>Due to a RPC/HTTP request is goroutine in Golang, so we can use context to cancel the request by canceling goroutine.</p><p>Context can be put in a binary tree, actually, it has parent and child node.</p><p>So when we want to cancel a request cross many goroutine, we can use context tree.</p><p>Every node in the tree will sub the chan <code>Done</code>, when a node received the signal, the children will invoke <code>cancel()</code>.</p><p>And type context has a map struct, so we can save k-v data in it.</p><p>But it is better to save immutable information like:</p><ol><li>request id</li><li>trace id</li><li>user auth token</li></ol><h2 id="Create-a-context"><a href="#Create-a-context" class="headerlink" title="Create a context"></a>Create a context</h2><p>First we can create a empty context by <code>Background()</code> and <code>TODO()</code>.</p><p>There are same function. </p><p>But using <code>TODO()</code> that means you don’t know which context to use ot it is not yet available.</p><p>A empty context is never canceled, has no values, and has no deadline.</p><p>We usually use them in following:</p><ul><li>main function</li><li>initialization</li><li>test case</li><li>top-level Context for incoming requests</li></ul><p>When we have a context, we can use <code>WithCancel()</code>, <code>WithDeadline()</code> and <code>WithTimeout()</code> to create a child one.</p><p>We can see the source of <code>WithCancel()</code>:</p><pre><code class="hljs golang"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithCancel</span><span class="hljs-params">(parent Context)</span> <span class="hljs-params">(ctx Context, cancel CancelFunc)</span></span> &#123;c := newCancelCtx(parent)propagateCancel(parent, &amp;c)<span class="hljs-keyword">return</span> &amp;c, <span class="hljs-function"><span class="hljs-keyword">func</span><span class="hljs-params">()</span></span> &#123; c.cancel(<span class="hljs-literal">true</span>, Canceled) &#125;&#125;</code></pre><p>The <code>propagateCancel</code> will connect parent and child of cancel function.</p><p>First, if a context is empty, can be created by <code>Background()</code>, <code>Done()</code>, or is never canceled, can be created by <code>WithValue(emptyCtx, key, value)</code>, the <code>propagateCancel</code> will do nothing, parent will have no effect on children.</p><p>And then, the function will use <code>select</code> to sub parent chan <code>Done</code>, if parent is done, child will cancel immediately.</p><p>If not, the child will put into parent’s a list of children.</p><p>If developer custom the type of context, the function will run a goroutine to sub chan <code>child.Done</code> and <code>parent.Done</code>.</p><h2 id="Pass-Value"><a href="#Pass-Value" class="headerlink" title="Pass Value"></a>Pass Value</h2><p>Sometimes, we want to trace a request in RPC/HTTP. We can put a trace id in headers or meta data.</p><p>In goroutine, we can pass some immutable information in context.</p><p>And we should control the key, and use <code>GetXXX()</code> and <code>WithXXX()</code> to get and set value.</p><pre><code class="hljs golang"><span class="hljs-keyword">type</span> privateCtxType <span class="hljs-keyword">string</span><span class="hljs-keyword">var</span> (  reqID = privateCtxType(<span class="hljs-string">&quot;req-id&quot;</span>))<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">GetRequestID</span><span class="hljs-params">(ctx context.Context)</span> <span class="hljs-params">(<span class="hljs-keyword">int</span>, <span class="hljs-keyword">bool</span>)</span></span> &#123;  id, exists := ctx.Value(reqID).(<span class="hljs-keyword">int</span>)  <span class="hljs-keyword">return</span> id, exists&#125;<span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">WithRequestID</span><span class="hljs-params">(ctx context.Context, reqId <span class="hljs-keyword">int</span>)</span> <span class="hljs-title">context</span>.<span class="hljs-title">Context</span></span> &#123;  <span class="hljs-keyword">return</span> context.WithValue(ctx, reqID, reqId)&#125;</code></pre><h2 id="Using"><a href="#Using" class="headerlink" title="Using"></a>Using</h2><p>There are currently two ways to integrate Context objects into your API:</p><ul><li>The first parameter of a function call</li><li>Optional config on a request structure</li></ul><blockquote><p>A great mental model of using Context is that it should flow through your program. Imagine a river or running water. This generally means that you don’t want to store it somewhere like in a struct. Nor do you want to keep it around any more than strictly needed. Context should be an interface that is passed from function to function down your call stack, augmented as needed. Ideally, a Context object is created with each request and expires when the request is over.</p></blockquote><h2 id="Different-with-Gin-Context"><a href="#Different-with-Gin-Context" class="headerlink" title="Different with Gin Context"></a>Different with Gin Context</h2><p>Gin use context to extend middleware.</p><p>The framework is as like <code>koa</code> in Node.js.</p><p>The middleware will be invoked twice in request and response.</p><p>And if we want to pass value in middleware, we can put k-v data in context.</p><p>But also, context of gin had implement the golang context interface.</p>]]></content>
    
    
    
    <tags>
      
      <tag>Golang</tag>
      
      <tag>Interview</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
